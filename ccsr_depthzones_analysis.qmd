---
title: "Central Coast Study Region Depth Zones Analysis"
author: "Bailey JÃ¸rgensen"
format: html
editor: source
---

```{r}
# load libraries
librarian::shelf(tidyverse, janitor, sf, terra, tmap, knitr, showtext, ggtext, leaflet)
```

## Here is what the PMEP depth zones stand for, according to the metadata:

### NOTE: The substrate data records the whole name, rather than using the # code

-   Value 0: Landward Zone
-   Value 1: Core Zone (Estuary Overlap)
-   Value 2: Core Zone (Shoreline to -30m), State Waters
-   Value 3: Core Zone (Shoreline to -30m), Federal Waters
-   Value 4: Seaward Zone (-30m to -100m), State Waters
-   Value 5: Seaward Zone (-30m to -100m), Federal Waters
-   Value 6: Deep Shelf or Channel (-100m to -200m), State Waters
-   Value 7: Deep Shelf or Channel (-100m to -200m), Federal Waters
-   Value 8: Outside PMEP Score (\>-300m) or International Waters

## For the purposes of the PMEP depth zone analysis, I have decided to use the PMEP Zones that are recorded in the substrate data, rather than the biotic data. This is because it is expected for there to be near 100% MPA coverage of the different substrate types, where as the biotic data may not contain whole coverage of MPA, given the nature of biota.

## Read in substrate, biota and MPA data

```{r}
# Read in data
rds.dir <- "/capstone/marinebiomaps/data/rds-files"
ccsr_substrate <- readRDS(file.path(rds.dir, "ccsr_substrate.rds"))

# Read in MPA boundaries data
boundary.dir <- "/capstone/marinebiomaps/data/MPA_boundaries"
mpa_boundaries <- sf::st_read(file.path(boundary.dir, "California_Marine_Protected_Areas_[ds582].shp"))

# Clean and transform MPA boundaries data
mpas <- mpa_boundaries |> 
  clean_names() |> 
  st_transform(mpas, crs = st_crs(ccsr_substrate)) |> 
  st_make_valid()

```

```{r}
# Make a simple dataframe
ccsr_substrate_simple <- ccsr_substrate |> 
  st_drop_geometry()
```

```{r}
# Take a look at all the PMEP depth zones to verify
unique(ccsr_substrate_simple$pmep_zone_detail)
```

```{r}
# Rename depth zone variables for searchability/ease - I will bring back more technical names for viz
ccsr_substrate_simple <- ccsr_substrate_simple |> 
  mutate(pmep_zone_detail = case_when(
    pmep_zone_detail == "Deep Shelf or Sound (-100m to -200m), State Waters"  ~ "Zone 6",
    pmep_zone_detail == "Outside PMEP Scope (>-200m) or International Waters" ~ "Zone 8",
    pmep_zone_detail == "Seaward Zone (-30m to -100m), Federal"               ~ "Zone 5",
    pmep_zone_detail == "Core Zone (Shoreline to -30m), State Waters"         ~ "Zone 2",
    pmep_zone_detail == "Landward Zone"                                       ~ "Zone 0",
    pmep_zone_detail == "Seaward Zone (-30m to -100m), State Waters"          ~ "Zone 4",
    pmep_zone_detail == "Deep Shelf or Sound (-100m to -200m), Federal"       ~ "Zone 7",
    pmep_zone_detail == "Core Zone (Shoreline to -30m), Federal"              ~ "Zone 3"
  ))


unique(ccsr_substrate_simple$pmep_zone_detail)
```

```{r}
# Total area across NCSR MPAs
total_ha_ccsr_mpas <- sum(ccsr_substrate_simple$area_ha, na.rm = TRUE)

print(paste0("The total area of Substrate data within CCSR MPAs in Ha: ", round(total_ha_ccsr_mpas, 2)))

# Summarize total area by zone and calculate percentage
zone_areas_ccsr <- ccsr_substrate_simple |> 
  group_by(pmep_zone_detail) |> 
  summarize(total_area_per_zone_ccsr = sum(area_ha, na.rm = TRUE), .groups = "drop") |> 
  mutate(percent_of_total_ccsr = (total_area_per_zone_ccsr / total_ha_ccsr_mpas) * 100)

# Print formatted output
zone_areas_ccsr |> 
  arrange(pmep_zone_detail) |> 
  rowwise() |> 
  mutate(print_statement = paste0(
    pmep_zone_detail, 
    ": ", round(total_area_per_zone_ccsr, 2), " ha (", 
    round(percent_of_total_ccsr, 2), "% of total)"
  )) |> 
  pull(print_statement) |> 
  cat(sep = "\n")

```
**NOTE: the fact that the "federal waters" zones have anything at all in them is strange, considering that we have already filtered to MPAs, which I assume are all state waters? But maybe not? Bears clarifying.**

```{r}
# Taking out zone 1 and 8 since it is empty....as well as the federal zones
zones_to_plot <- c("Zone 0", "Zone 2", "Zone 4", "Zone 6", "Zone 8")

zone_areas_filtered_ccsr <- zone_areas_ccsr |> 
  filter(pmep_zone_detail %in% zones_to_plot) |> 
  mutate(pmep_zone_detail = case_when(
    pmep_zone_detail == "Zone 0" ~ "Landward Zone",
    pmep_zone_detail == "Zone 2" ~ "Core Zone (Shoreline to -30m)",
    pmep_zone_detail == "Zone 4" ~ "Seaward Zone (-30m to -100m)",
    pmep_zone_detail == "Zone 6" ~ "Deep Shelf or Sound (-100m to -200m)",
    pmep_zone_detail == "Zone 8" ~ "Outside PMEP Scope (>-200m)"
  )) |> 
  mutate(pmep_zone_detail = factor(pmep_zone_detail, levels = c(
    "Landward Zone",
    "Core Zone (Shoreline to -30m)",
    "Seaward Zone (-30m to -100m)",
    "Deep Shelf or Sound (-100m to -200m)",
    "Outside PMEP Scope (>-200m)"
  )))

font_add_google("Montserrat", "montserrat")
showtext_auto()

ggplot(zone_areas_filtered_ccsr, aes(x = percent_of_total_ccsr, y = pmep_zone_detail, fill = pmep_zone_detail)) +
  geom_col() +
  labs(
    title = "Depth Zones as a % of Total CCSR MPA Area",
    x = "Percent of Total CCSR Area (%)",
    y = "PMEP Depth Zone"
  ) +
  theme_classic() +
  theme(
    text = element_text(family = "montserrat", size = 18),
    axis.text.x = element_text(hjust = 1),
    legend.position = "none") +
  geom_label(aes(label = paste0(round(percent_of_total_ccsr, 1), "%")),
             fill = "white", 
             color = "black",
             hjust = 0,    # Align to left
             x = 1,        # Set near y-axis (adjust as needed)
             size = 3.5) +
  scale_fill_brewer(palette = "Blues") +
  scale_y_discrete(labels = function(x) str_wrap(x, width = 20))

```





**POINT LOBOS ANALYSIS**


This code chunk combines substrate and mpa...but just for Point Lobos

```{r}
# Filter mpa data to just Point Lobos
point_lobos <- ccsr_substrate |>
  filter(shortname == "Point Lobos")
```

Rename the pmep zones

```{r}
point_lobos <- point_lobos %>%
  mutate(pmep_zone_detail = recode(pmep_zone_detail,
                                   "Core Zone (Shoreline to -30m), State Waters" = "Zone 2: Core Zone (Shoreline to -30m), State Waters",
                                   "Deep Shelf or Sound (-100m to -200m), State Waters" = "Zone 6: Deep Shelf or Sound (-100m to -200m), State Waters",
                                   "Landward Zone" = "Zone 0: Landward Zone",
                                   "Outside PMEP Scope (>-200m) or International Waters" = "Zone 8: Outside PMEP Scope (>-200m) or International Waters",
                                   "Seaward Zone (-30m to -100m), State Waters" = "Zone 4: Seaward Zone (-30m to -100m), State Waters"))  
```

```{r}
unique(point_lobos$pmep_zone_detail)
```

### This chunk makes a map of Point Lobos Depth Zones!

```{r}
font_add_google("Montserrat", "montserrat")
showtext_auto()

# Create base map with the colored polygons
tm_shape(point_lobos) +
  tm_polygons(col = "pmep_zone_detail",
              palette = c('#09EEC8','#6EA1C8', '#3C7BB7'),
              title = "Depth\nZones",
              labels = c("Zone 0", "Zone 2", "Zone 4", "Zone 6", "Zone 8")) +
  # Add the same shape again but with solid fill to mask underlying features
  tm_shape(point_lobos) +
  tm_fill(col = "pmep_zone_detail",
          palette = c('#09EEC8','#6EA1C8', '#3C7BB7'),
          legend.show = FALSE) +  # Don't show this in legend
  tm_layout(legend.position = c("right", "bottom"),
            legend.title.fontfamily = "montserrat",
            legend.text.fontfamily = "montserrat") 
  
```

# Calculate the percentage of each depth zone in the Point Lobos MPA

```{r}
# Drop geometry
point_lobos_simple <- point_lobos |>
  st_drop_geometry()
```

```{r}
# Step 2: Make sure pmep_zone is treated as a factor (categorical)
point_lobos_simple$pmep_zone_detail <- as.factor(point_lobos_simple$pmep_zone_detail)

# Step 3: Calculate the percentages for each shortname and pmep_zone combination
lobos_percentages <- point_lobos_simple |>
  # Group by shortname and pmep_zone to count occurrences
  group_by(shortname, pmep_zone_detail) |>
  summarise(count = n(), .groups = "drop") |>
  
  # Group by shortname to calculate total count for each shortname
  group_by(shortname) %>%
  mutate(percentage = count / sum(count) * 100) |>
  
  # Reshape data to have a column for each unique pmep_zone
  select(-count) |>
  pivot_wider(
    names_from = pmep_zone_detail,
    values_from = percentage) 

```

```{r}
# Make a lobos pivot longer table
lobos_long <- lobos_percentages %>%
  pivot_longer(
    cols = -`shortname`, 
    names_to = "PMEP_Zone",
    values_to = "Percentage"
  )
```

### Make a table presenting depth zones averages for Point Lobos!

```{r}

lobos_long |>
  gt() |> 
  tab_header(
    title = md("Depth Zones of **Point Lobos SMR and SMCA**"),
    subtitle = "depth zones as percentages of total protected area"
  ) |> 
  tab_style(
    style = cell_text(size = px(12)),
    locations = cells_column_labels()
  ) |>
  tab_style(
    style = cell_text(size = px(10)), # Adjust size for source note
    locations = cells_source_notes()
  ) |>
  fmt_number(
    columns = Percentage,  
    decimals = 2,
    suffix = "%"
  ) |>
  text_transform(
    locations = cells_body(columns = Percentage),
    fn = function(x) paste0(x, "%")  # Manually appends the % sign
  ) |>
  tab_style(
    style = cell_text(color = "#002f41"),  # Change text color (modify as needed)
    locations = cells_body(columns = Percentage)
  ) |> 
  tab_source_note(md("*Depth Zones classified by the Pacific Marine and Estuarine Partnership (PMEP)*")) 

```