---
title: "South Coast Study Region Depth Zones Analysis"
author: "Bailey JÃ¸rgensen"
format: html
editor: source
---

```{r}
# load libraries
librarian::shelf(tidyverse, janitor, sf, terra, tmap, knitr, showtext, ggtext, leaflet)
```

## Here is what the PMEP depth zones stand for, according to the metadata:

### NOTE: The substrate data records the whole name, rather than using the \# code

-   Value 0: Landward Zone
-   Value 1: Core Zone (Estuary Overlap)
-   Value 2: Core Zone (Shoreline to -30m), State Waters
-   Value 3: Core Zone (Shoreline to -30m), Federal Waters
-   Value 4: Seaward Zone (-30m to -100m), State Waters
-   Value 5: Seaward Zone (-30m to -100m), Federal Waters
-   Value 6: Deep Shelf or Channel (-100m to -200m), State Waters
-   Value 7: Deep Shelf or Channel (-100m to -200m), Federal Waters
-   Value 8: Outside PMEP Score (\>-300m) or International Waters

## For the purposes of the PMEP depth zone analysis, I have decided to use the PMEP Zones that are recorded in the substrate data, rather than the biotic data. This is because it is expected for there to be 100% MPA coverage of the different substrate types, where as the biotic data may not contain whole coverage of MPA, given the nature of biota.

## Read in substrate, biota and MPA data

```{r}
# Read in data
rds.dir <- "/capstone/marinebiomaps/data/rds-files"
scsr_substrate <- readRDS(file.path(rds.dir, "scsr_substrate.rds"))
scsr_substrate_fullregion <- readRDS(file.path(rds.dir, "scsr_substrate_fullregion.rds"))
scsr_biota <- readRDS(file.path(rds.dir, "scsr_biota.rds"))
scsr_biota_fullregion <- readRDS(file.path(rds.dir, "scsr_biota_fullregion.rds"))

```

```{r}
# Modify to make these more manageable, recalcualte hectares, and drop unclassified 
scsr_substrate <- scsr_substrate |> 
  select(c(pmep_zone_detail, pmep_zone, cmecs_sc_category, cmecs_sc_class, area_ha, geometry, study_regi, shortname, fullname, type, state)) |> 
  filter(cmecs_sc_category != "Unclassified") |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000))

scsr_substrate_fullregion <- scsr_substrate_fullregion |> 
  select(c(pmep_zone_detail, pmep_zone, cmecs_sc_category, cmecs_sc_class, area_ha, geometry, study_regi, name, type, state)) |> 
  filter(cmecs_sc_category != "Unclassified") |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000))

scsr_biota <- scsr_biota |> 
  select(c(pmep_zone, cmecs_bc_category, cmecs_bc_name, area_ha, geometry, study_regi, shortname, fullname, type, state)) |> 
  filter(cmecs_bc_category != "Unclassified") |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000))

scsr_biota_fullregion <- scsr_biota_fullregion |> 
  select(c(pmep_zone, cmecs_bc_category, cmecs_bc_name, area_ha, geometry, study_regi, name, type, state)) |>  
  filter(cmecs_bc_category != "Unclassified") |> 
  mutate(area_ha = as.numeric(st_area(geometry) / 10000))
```



```{r}
# Make a simple dataframe
scsr_substrate_simple <- scsr_substrate |> 
  st_drop_geometry()

scsr_substrate_fullregion_simple <- scsr_substrate_fullregion |> 
  st_drop_geometry()

# Make a simple dataframe
scsr_biota_simple <- scsr_biota |> 
  st_drop_geometry()

scsr_biota_fullregion_simple <- scsr_biota_fullregion |> 
  st_drop_geometry()
```

```{r}
# Take a look at all the PMEP depth zones to verify
unique(scsr_substrate_simple$pmep_zone_detail)
```

```{r}
# Rename depth zone variables for searchability/ease - I will bring back more technical names for viz
scsr_substrate_simple <- scsr_substrate_simple |> 
  mutate(pmep_zone_detail = case_when(
    pmep_zone_detail == "Deep Shelf or Sound (-100m to -200m), State Waters"  ~ "Zone 6",
    pmep_zone_detail == "Outside PMEP Scope (>-200m) or International Waters" ~ "Zone 8",
    pmep_zone_detail == "Seaward Zone (-30m to -100m), Federal"               ~ "Zone 5",
    pmep_zone_detail == "Core Zone (Shoreline to -30m), State Waters"         ~ "Zone 2",
    pmep_zone_detail == "Landward Zone"                                       ~ "Zone 0",
    pmep_zone_detail == "Seaward Zone (-30m to -100m), State Waters"          ~ "Zone 4",
    pmep_zone_detail == "Deep Shelf or Sound (-100m to -200m), Federal"       ~ "Zone 7",
    pmep_zone_detail == "Core Zone (Shoreline to -30m), Federal"              ~ "Zone 3"
  ))


unique(scsr_substrate_simple$pmep_zone_detail)
```

```{r}
# Rename depth zone variables for searchability/ease - I will bring back more technical names for viz
scsr_substrate_fullregion_simple <- scsr_substrate_fullregion_simple |> 
  mutate(pmep_zone_detail = case_when(
    pmep_zone_detail == "Deep Shelf or Sound (-100m to -200m), State Waters"  ~ "Zone 6",
    pmep_zone_detail == "Outside PMEP Scope (>-200m) or International Waters" ~ "Zone 8",
    pmep_zone_detail == "Seaward Zone (-30m to -100m), Federal"               ~ "Zone 5",
    pmep_zone_detail == "Core Zone (Shoreline to -30m), State Waters"         ~ "Zone 2",
    pmep_zone_detail == "Landward Zone"                                       ~ "Zone 0",
    pmep_zone_detail == "Seaward Zone (-30m to -100m), State Waters"          ~ "Zone 4",
    pmep_zone_detail == "Deep Shelf or Sound (-100m to -200m), Federal"       ~ "Zone 7",
    pmep_zone_detail == "Core Zone (Shoreline to -30m), Federal"              ~ "Zone 3"
  ))


unique(scsr_substrate_fullregion_simple$pmep_zone_detail)
```

## Depth Zone relative abundance calculations


```{r}
# Total area across SCSR MPAs
total_ha_scsr_mpas <- sum(scsr_substrate_simple$area_ha, na.rm = TRUE)

print(paste0("The total area of Substrate data within SCSR MPAs in Ha: ", round(total_ha_scsr_mpas, 2)))

# Summarize total area by zone and calculate percentage
zone_areas_scsr <- scsr_substrate_simple |> 
  group_by(pmep_zone_detail) |> 
  summarize(total_area_per_zone_scsr = sum(area_ha, na.rm = TRUE), .groups = "drop") |> 
  mutate(percent_of_total_scsr = (total_area_per_zone_scsr / total_ha_scsr_mpas) * 100)

# Print formatted output
zone_areas_scsr |> 
  arrange(pmep_zone_detail) |> 
  rowwise() |> 
  mutate(print_statement = paste0(
    pmep_zone_detail, 
    ": ", round(total_area_per_zone_scsr, 2), " ha (", 
    round(percent_of_total_scsr, 2), "% of total)"
  )) |> 
  pull(print_statement) |> 
  cat(sep = "\n")

```


```{r}
# Total area across scsr statewaters
total_ha_scsr_fullregion <- sum(scsr_substrate_fullregion_simple$area_ha, na.rm = TRUE)

print(paste0("The total area of Substrate data within SCSR Statewaters: ", round(total_ha_scsr_fullregion, 2)))

# Summarize total area by zone and calculate percentage
zone_areas_scsr_fullregion <- scsr_substrate_fullregion_simple |> 
  group_by(pmep_zone_detail) |> 
  summarize(total_area_per_zone_scsr_fullregion = sum(area_ha, na.rm = TRUE), .groups = "drop") |> 
  mutate(percent_of_total_scsr_fullregion = (total_area_per_zone_scsr_fullregion / total_ha_scsr_fullregion) * 100)

# Print formatted output
zone_areas_scsr_fullregion |> 
  arrange(pmep_zone_detail) |> 
  rowwise() |> 
  mutate(print_statement = paste0(
    pmep_zone_detail, 
    ": ", round(total_area_per_zone_scsr_fullregion, 2), " ha (", 
    round(percent_of_total_scsr_fullregion, 2), "% of total)"
  )) |> 
  pull(print_statement) |> 
  cat(sep = "\n")

```

## Substrate relative abundance calculations

```{r}
# Total area across SCSR MPAs
total_ha_scsr_mpas <- sum(scsr_substrate_simple$area_ha, na.rm = TRUE)

print(paste0("The total area of Substrate data within SCSR MPAs in Ha: ", round(total_ha_scsr_mpas, 2)))

# Summarize total area by zone and calculate percentage
cat_areas_scsr <- scsr_substrate_simple |> 
  group_by(cmecs_sc_category) |> 
  summarize(total_area_per_cat_scsr = sum(area_ha, na.rm = TRUE), .groups = "drop") |> 
  mutate(percent_of_total_scsr = (total_area_per_cat_scsr / total_ha_scsr_mpas) * 100)

# Print formatted output
cat_areas_scsr |> 
  arrange(cmecs_sc_category) |> 
  rowwise() |> 
  mutate(print_statement = paste0(
    cmecs_sc_category, 
    ": ", round(total_area_per_cat_scsr, 2), " ha (", 
    round(percent_of_total_scsr, 2), "% of total)"
  )) |> 
  pull(print_statement) |> 
  cat(sep = "\n")

```

```{r}
# Total area across SCSR MPAs
total_ha_scsr_fullregion <- sum(scsr_substrate_fullregion_simple$area_ha, na.rm = TRUE)

print(paste0("The total area of Substrate data within SCSR Statewaters: ", round(total_ha_scsr_fullregion, 2)))

# Summarize total area by zone and calculate percentage
sub_areas_scsr_fullregion <- scsr_substrate_fullregion_simple |> 
  group_by(cmecs_sc_category) |> 
  summarize(total_area_per_cat_scsr_fullregion = sum(area_ha, na.rm = TRUE), .groups = "drop") |> 
  mutate(percent_of_total_scsr_fullregion_cat = (total_area_per_cat_scsr_fullregion / total_ha_scsr_fullregion) * 100)

# Print formatted output
sub_areas_scsr_fullregion |> 
  arrange(cmecs_sc_category) |> 
  rowwise() |> 
  mutate(print_statement = paste0(
    cmecs_sc_category, 
    ": ", round(total_area_per_cat_scsr_fullregion, 2), " ha (", 
    round(percent_of_total_scsr_fullregion_cat, 2), "% of total)"
  )) |> 
  pull(print_statement) |> 
  cat(sep = "\n")
```

## Biota relative abundances calculations

```{r}
# Total area across SCSR MPAs for biota
total_ha_scsr_mpas_bio <- sum(scsr_biota_simple$area_ha, na.rm = TRUE)

print(paste0("The total area of Biota data within SCSR MPAs in Ha: ", round(total_ha_scsr_mpas_bio, 2)))

# Summarize total area by cat and calculate percentage
cat_areas_scsr_bio <- scsr_biota_simple |> 
  group_by(cmecs_bc_category) |> 
  summarize(total_area_per_cat_scsr_bio = sum(area_ha, na.rm = TRUE), .groups = "drop") |> 
  mutate(percent_of_total_scsr_bio = (total_area_per_cat_scsr_bio / total_ha_scsr_mpas_bio) * 100)

# Print formatted output
cat_areas_scsr_bio |> 
  arrange(cmecs_bc_category) |> 
  rowwise() |> 
  mutate(print_statement = paste0(
    cmecs_bc_category, 
    ": ", round(total_area_per_cat_scsr_bio, 2), " ha (", 
    round(percent_of_total_scsr_bio, 2), "% of total)"
  )) |> 
  pull(print_statement) |> 
  cat(sep = "\n")

```

```{r}
# Total area across SCSR statewaters for biota
total_ha_scsr_full_bio <- sum(scsr_biota_fullregion_simple$area_ha, na.rm = TRUE)

print(paste0("The total area of Biota data within SCSR Statewaters in Ha: ", round(total_ha_scsr_full_bio, 2)))

# Summarize total area by cat and calculate percentage
cat_areas_scsr_bio_full <- scsr_biota_fullregion_simple |> 
  group_by(cmecs_bc_category) |> 
  summarize(total_area_per_cat_scsr_bio_full = sum(area_ha, na.rm = TRUE), .groups = "drop") |> 
  mutate(percent_of_total_scsr_bio_full = (total_area_per_cat_scsr_bio_full / total_ha_scsr_full_bio) * 100)

# Print formatted output
cat_areas_scsr_bio_full |> 
  arrange(cmecs_bc_category) |> 
  rowwise() |> 
  mutate(print_statement = paste0(
    cmecs_bc_category, 
    ": ", round(total_area_per_cat_scsr_bio_full, 2), " ha (", 
    round(percent_of_total_scsr_bio_full, 2), "% of total)"
  )) |> 
  pull(print_statement) |> 
  cat(sep = "\n")

```

## Making plots for the Final Presentation

```{r}
# Zoom in on Reyes
campus_sub <- scsr_substrate |> 
  filter(shortname == "Campus Point")

campus_sub <- campus_sub |> 
  sf::st_transform('+proj=latlong +datum=WGS84')

campus_sub$cmecs_sc_category <- as.character(campus_sub$cmecs_sc_category)

# Define custom color palette
substrate_categories_campus_sub <- unique(campus_sub$cmecs_sc_category)
substrate_palette <- c("#204035FF", "#4A7169FF", "#849383", "#BEB59CFF", "#998467", "#735231FF", "#49271BFF")
pal <- colorFactor(palette = substrate_palette, domain = substrate_categories_campus_sub)

# Map with color-coded polygons
leaflet() |> 
  addProviderTiles(providers$CartoDB.Positron) |> 
  setView(lng = -123.04444, lat = 38.83528, zoom = 8) |> 
  addMiniMap(toggleDisplay = TRUE, minimized = FALSE) |> 
  addPolygons(data = campus_sub,
              color = ~pal(cmecs_sc_category), # Assign colors based on type
              weight = 3,
              fillOpacity = 1,
              popup = paste0("Substrate type:  ", campus_sub$cmecs_sc_category, "<br>",
                              "Substrate type area:  ", campus_sub$area_ha, "<br>")) |> 
  addLegend(position = "topright",
            pal = pal,
            values = campus_sub$cmecs_sc_category,
            title = "Substrate Within MPAs")


```

```{r}
# Zoom in on campus point -DEPTH
campus_sub$cmecs_sc_category <- as.character(campus_sub$pmep_zone_detail)

# Define custom color palette
depth_categories_campus_sub <- unique(campus_sub$pmep_zone_detail)
depth_palette <- "Blues"
pal <- colorFactor(palette = depth_palette, domain = depth_categories_campus_sub)

# Map with color-coded polygons
leaflet() |> 
  addProviderTiles(providers$CartoDB.Positron) |> 
  setView(lng = -123.04444, lat = 38.83528, zoom = 8) |> 
  addMiniMap(toggleDisplay = TRUE, minimized = FALSE) |> 
  addPolygons(data = campus_sub,
              color = ~pal(pmep_zone_detail), # Assign colors based on type
              weight = 3,
              fillOpacity = 1,
              popup = paste0("Depth Zone:  ", campus_sub$pmep_zone_detail, "<br>",
                              "Depth Zone area:  ", campus_sub$area_ha, "<br>")) |> 
  addLegend(position = "topright",
            pal = pal,
            values = campus_sub$pmep_zone_detail,
            title = "Depth Zones Within MPAs")


```

```{r}

# campus point BIOTA 
campus_biota <- scsr_biota |> 
  filter(shortname =="Campus Point") |> 
  sf::st_transform('+proj=latlong +datum=WGS84')


# Set tmap to interactive mode
tmap_mode("view")

# Create the map
tm_shape(campus_biota) +
  tm_polygons(
    col = "cmecs_bc_category",
    palette = c("seagreen", "yellow2", "#D0D3A2", "#798234FF", "#F0C6C3FF", "#DF91A3FF", "#D46780FF" ),
    title = "Biota within MPAs",
    # border.col = "grey40",
    # border.lwd = 0.0005,
    alpha = 1
    # popup.vars = c("MPA Name" = "name", 
    #               "Biota type" = "cmecs_bc_category", 
    #               "Area (ha)" = "area_ha")
  ) +
  tm_view(
    set.view = c(-123.04444, 38.83528, 8)
  ) +
  tm_basemap("CartoDB.Positron") +
    tm_minimap(
    position = "bottom-right",
    toggleDisplay = TRUE,
    minimized = FALSE,
    width = 150,
    height = 150
  ) +
  tm_layout(
    legend.outside = TRUE,
    legend.outside.position = "right"
  )
```


```{r}
# Read in MPA boundaries data
boundary.dir <- "/capstone/marinebiomaps/data/MPA_boundaries"
mpa_boundaries <- sf::st_read(file.path(boundary.dir, "California_Marine_Protected_Areas_[ds582].shp"))

# Clean and transform MPA boundaries data
mpas <- mpa_boundaries |> 
  clean_names() |> 
  sf::st_transform('+proj=latlong +datum=WGS84') |> 
  st_make_valid() |> 
  rename(hectares_mpa = hectares)

# Filter to campus point
campus_mpa <- mpas |> 
  filter(shortname == "Campus Point")

# Make a map
leaflet() |> 
  addProviderTiles(providers$CartoDB.Positron) |> 
  setView(lng = -119.6989,
          lat = 34.4203,
          zoom = 8) |> 
  addMiniMap(toggleDisplay = TRUE, minimized = FALSE) |> 
  addPolygons(data = campus_mpa,
              color = "seagreen", # Assign colors based on type
              weight = 3,
              fillOpacity = .25,
              label = ~fullname)




```


## Make a map of all of the substrate data for scsr: with precision reduced

```{r}
# SCSR_fullregion

# Reduce resolution
scsr_substrate_fullregion_red <- st_simplify(scsr_substrate_fullregion, preserveTopology = TRUE, dTolerance = 30) |> 
  sf::st_transform('+proj=latlong +datum=WGS84')


scsr_substrate_fullregion_red$cmecs_sc_category <- as.character(scsr_substrate_fullregion_red$cmecs_sc_category)

# Define custom color palette
substrate_categories_scsr_fullregion_red <- unique(scsr_substrate_fullregion_red$cmecs_sc_category)
substrate_palette <- c("#204035FF", "#4A7169FF", "#849383", "#BEB59CFF", "#998467", "#735231FF", "#49271BFF")
pal <- colorFactor(palette = substrate_palette, domain = substrate_categories_scsr_fullregion_red)

# Map with color-coded polygons
leaflet() |> 
  addProviderTiles(providers$CartoDB.Positron) |> 
  setView(lng = -119.6989, lat = 34.4203, zoom = 8) |> 
  addMiniMap(toggleDisplay = TRUE, minimized = FALSE) |> 
  addPolygons(data = scsr_substrate_fullregion_red,
              color = ~pal(cmecs_sc_category), # Assign colors based on type
              weight = 3,
              fillOpacity = 1,
              popup = paste0("Substrate type:  ", scsr_substrate_fullregion_red$cmecs_sc_category, "<br>",
                              "Substrate type area:  ", scsr_substrate_fullregion_red$area_ha, "<br>")) |> 
  addLegend(position = "topright",
            pal = pal,
            values = scsr_substrate_fullregion_red$cmecs_sc_category,
            title = "Substrate Within MPAs")
```
















## Calculate Depth Zones Absolute Abundance percentages for tables

```{r}
# Read in statewater/study regions boundaries data
sr_boundary.dir <- "/capstone/marinebiomaps/data/MLPA_Study_Regions"
scsr_boundary <- sf::st_read(file.path(sr_boundary.dir, "Marine_Life_Protection_Act_Study_Regions_-_R7_-_CDFW_[ds3178].shp")) |> 
  clean_names() |> 
  st_transform(st_crs(scsr_substrate)) |> 
  st_make_valid() |> 
  filter(study_regi == "SCSR")
```

```{r}
colnames(scsr_boundary)
```

```{r}
# Add this to pipe once i verify col names 
#mutate(area_ha_scsr = as.numeric(st_area(geometry) / 10000))
```



```{r}
# Total area of SCSR MPA
total_ha_scsr_mpas <- sum(scsr_boundary$area_ha_scsr, na.rm = TRUE)

print(paste0("The total hectarage of SCSR MPAs in Ha: ", round(total_ha_scsr_mpas, 2)))

# Summarize total area by zone and calculate percentage
zone_areas_scsr_absolute <- scsr_substrate_simple |> 
  group_by(pmep_zone_detail) |> 
  summarize(total_area_per_zone_scsr_absolute = sum(area_ha, na.rm = TRUE), .groups = "drop") |> 
  mutate(percent_of_total_scsr_absolute = (total_area_per_zone_scsr_absolute / total_ha_scsr_mpas) * 100)

# Print formatted output
zone_areas_scsr_absolute |> 
  arrange(pmep_zone_detail) |> 
  rowwise() |> 
  mutate(print_statement = paste0(
    pmep_zone_detail, 
    ": ", round(total_area_per_zone_scsr_absolute, 2), " ha (", 
    round(percent_of_total_scsr_absolute, 2), "% of total)"
  )) |> 
  pull(print_statement) |> 
  cat(sep = "\n")
```











**NOTE: the fact that the "federal waters" zones have anything at all in them is strange, considering that we have already filtered to MPAs, which I assume are all state waters? But maybe not? Bears clarifying.**

```{r}
# Taking out zone 1 and 8 since it is empty....as well as the federal zones
zones_to_plot <- c("Zone 0", "Zone 2", "Zone 4", "Zone 6", "Zone 8")

zone_areas_filtered_scsr <- zone_areas_scsr |> 
  filter(pmep_zone_detail %in% zones_to_plot) |> 
  mutate(pmep_zone_detail = case_when(
    pmep_zone_detail == "Zone 0" ~ "Landward Zone",
    pmep_zone_detail == "Zone 2" ~ "Core Zone (Shoreline to -30m)",
    pmep_zone_detail == "Zone 4" ~ "Seaward Zone (-30m to -100m)",
    pmep_zone_detail == "Zone 6" ~ "Deep Shelf or Sound (-100m to -200m)",
    pmep_zone_detail == "Zone 8" ~ "Outside PMEP Scope (>-200m)"
  )) |> 
  mutate(pmep_zone_detail = factor(pmep_zone_detail, levels = c(
    "Landward Zone",
    "Core Zone (Shoreline to -30m)",
    "Seaward Zone (-30m to -100m)",
    "Deep Shelf or Sound (-100m to -200m)",
    "Outside PMEP Scope (>-200m)"
  )))

font_add_google("Montserrat", "montserrat")
showtext_auto()

ggplot(zone_areas_filtered_scsr, aes(x = percent_of_total_scsr, y = pmep_zone_detail, fill = pmep_zone_detail)) +
  geom_col() +
  labs(
    title = "Depth Zones as a % of Total SCSR MPA Area",
    x = "Percent of Total SCSR Area (%)",
    y = "PMEP Depth Zone"
  ) +
  theme_classic() +
  theme(
    text = element_text(family = "montserrat", size = 18),
    axis.text.x = element_text(hjust = 1),
    legend.position = "none") +
  geom_label(aes(label = paste0(round(percent_of_total_scsr, 1), "%")),
             fill = "white", 
             color = "black",
             hjust = 0,    # Align to left
             x = 1,        # Set near y-axis (adjust as needed)
             size = 3.5) +
  scale_fill_brewer(palette = "Blues") +
  scale_y_discrete(labels = function(x) str_wrap(x, width = 20))

```






























# AND A LOOK AT THE CHANNEL ISLANDS

```{r}
# List all MPAs in southern CA
unique(scsr_substrate$shortname)
```

```{r}
tm_shape(scsr_substrate) +
  tm_polygons() 
```


```{r}
# Transform CRS for this map, since leaflet requires WGS84
scsr_substrate <- st_transform(scsr_substrate, crs = 4326)

# Create a color palette for the `pmep_zone_detail` variable
color_palette <- colorFactor(
  palette = c('#C4A9C2', '#CEB6AD', '#D8C397', '#A5CEA4', '#71D9B0', 
              '#09EEC8', '#22CFA7', '#3BAF85', '#6EA1C8', '#3C7BB7', '#796655'),
  domain = scsr_substrate$pmep_zone_detail
)

# Generate the Leaflet map
leaflet() |>
  addProviderTiles(providers$CartoDB.Positron) |>
  setView(lng = -119.6989,
          lat = 34.4203,
          zoom = 8) |>
  addMiniMap(toggleDisplay = TRUE,
             minimized = FALSE) |>
  addPolygons(data = south_sub_mpa,
              color = ~color_palette(pmep_zone_detail), # Apply the color palette
              weight = 3,
              popup = paste0("MPA Name:  ", scsr_substrate$shortname, "<br>",
                            "MPA Type:  ", scsr_substrate$type, "<br>",
                            "PMEP Zone Detail:  ", scsr_substrate$pmep_zone_detail))
```

Looking at the leaflet above im noticing some unexpected missing mpas... is it the substrate data?

```{r}
# Transform CRS for this map, since leaflet requires WGS84
mpas <- st_transform(mpas, crs = 4326)

# Map
leaflet() |>
  addProviderTiles(providers$CartoDB.Positron) |>
  setView(lng = -119.6989,
          lat = 34.4203,
          zoom = 8) |>
  addMiniMap(toggleDisplay = TRUE,
             minimized = FALSE) |>
  addPolygons(data = mpas,
              color = "#09EEC8",
              weight = 3,
              popup = paste0("MPA Name:  ", mpas$shortname, "<br>",
                            "MPA Type:  ", mpas$type))
```

OK, theres definitely MPAs there... lets look at the substrate data and see if any data looks like its missing, or maybe there just isnt substate data for those areas?

```{r}
harris_point_sub <- scsr_substrate |> 
  filter(shortname == "Harris Point") 

tm_shape(harris_point_sub) +
  tm_polygons()
```

```{r}
# This is what the Harris Point MPA is supposed to look like...
harris_point_mpa <- mpas |> 
  filter(shortname == "Harris Point")

tm_shape(harris_point_mpa) +
  tm_polygons()
```

Wow that is jacked up...gotta troubleshoot

Let me see if I can map all of the substrate data for the Channel Islands:

Coordinates found here: https://sanctuaries.noaa.gov/library/coord_cinms.html

```{r}
# Define the bounding box for the channel islands ... use SOUTH_SUB to avoid the invalid polygons
channel_islands_bbox <- st_as_sfc(st_bbox(c(
  xmin = -120.642080, # Westernmost longitude
  ymin = 33.362410,   # Southernmost latitude
  xmax = -118.907120, # Easternmost longitude
  ymax = 34.207070    # Northernmost latitude
), crs = 4326)) # CRS 4326 corresponds to WGS84

# Visualize the bounding box (optional)
plot(channel_islands_bbox, col = "goldenrod")
```

