---
title: "South Coast Study Region Depth Zones Analysis"
author: "Bailey JÃ¸rgensen"
format: html
editor: source
---

```{r}
# load libraries
librarian::shelf(tidyverse, janitor, sf, terra, tmap, knitr, showtext, gt, ggtext, leaflet)
```

## Here is what the PMEP depth zones stand for, according to the metadata:

### NOTE: The substrate data records the whole name, rather than using the \# code

-   Value 0: Landward Zone
-   Value 1: Core Zone (Estuary Overlap)
-   Value 2: Core Zone (Shoreline to -30m), State Waters
-   Value 3: Core Zone (Shoreline to -30m), Federal Waters
-   Value 4: Seaward Zone (-30m to -100m), State Waters
-   Value 5: Seaward Zone (-30m to -100m), Federal Waters
-   Value 6: Deep Shelf or Channel (-100m to -200m), State Waters
-   Value 7: Deep Shelf or Channel (-100m to -200m), Federal Waters
-   Value 8: Outside PMEP Score (\>-300m) or International Waters

## For the purposes of the PMEP depth zone analysis, I have decided to use the PMEP Zones that are recorded in the substrate data, rather than the biotic data. This is because it is expected for there to be 100% MPA coverage of the different substrate types, where as the biotic data may not contain whole coverage of MPA, given the nature of biota.

## Read in substrate, biota and MPA data

```{r}
# Read in sub data
rds.dir <- "/capstone/marinebiomaps/data/rds-files"
scsr_substrate <- readRDS(file.path(rds.dir, "scsr_substrate.rds"))

# Read in MPA boundaries data
boundary.dir <- "/capstone/marinebiomaps/data/MPA_boundaries"
mpa_boundaries <- sf::st_read(file.path(boundary.dir, "California_Marine_Protected_Areas_[ds582].shp"))

# Clean and transform MPA boundaries data
mpas <- mpa_boundaries |> 
  clean_names() |> 
  select("type", "shortname", "geometry") |> 
  st_transform(mpas, crs = st_crs(scsr_substrate)) |> 
  st_make_valid()

```


# AND A LOOK AT THE CHANNEL ISLANDS

```{r}
# List all MPAs in southern CA
unique(scsr_substrate$shortname)
```

```{r}
tm_shape(scsr_substrate) +
  tm_polygons() 
```


```{r}
# Transform CRS for this map, since leaflet requires WGS84
scsr_substrate <- st_transform(scsr_substrate, crs = 4326)

# Create a color palette for the `pmep_zone_detail` variable
color_palette <- colorFactor(
  palette = c('#C4A9C2', '#CEB6AD', '#D8C397', '#A5CEA4', '#71D9B0', 
              '#09EEC8', '#22CFA7', '#3BAF85', '#6EA1C8', '#3C7BB7', '#796655'),
  domain = scsr_substrate$pmep_zone_detail
)

# Generate the Leaflet map
leaflet() |>
  addProviderTiles(providers$CartoDB.Positron) |>
  setView(lng = -119.6989,
          lat = 34.4203,
          zoom = 8) |>
  addMiniMap(toggleDisplay = TRUE,
             minimized = FALSE) |>
  addPolygons(data = south_sub_mpa,
              color = ~color_palette(pmep_zone_detail), # Apply the color palette
              weight = 3,
              popup = paste0("MPA Name:  ", scsr_substrate$shortname, "<br>",
                            "MPA Type:  ", scsr_substrate$type, "<br>",
                            "PMEP Zone Detail:  ", scsr_substrate$pmep_zone_detail))
```

Looking at the leaflet above im noticing some unexpected missing mpas... is it the substrate data?

```{r}
# Transform CRS for this map, since leaflet requires WGS84
mpas <- st_transform(mpas, crs = 4326)

# Map
leaflet() |>
  addProviderTiles(providers$CartoDB.Positron) |>
  setView(lng = -119.6989,
          lat = 34.4203,
          zoom = 8) |>
  addMiniMap(toggleDisplay = TRUE,
             minimized = FALSE) |>
  addPolygons(data = mpas,
              color = "#09EEC8",
              weight = 3,
              popup = paste0("MPA Name:  ", mpas$shortname, "<br>",
                            "MPA Type:  ", mpas$type))
```

OK, theres definitely MPAs there... lets look at the substrate data and see if any data looks like its missing, or maybe there just isnt substate data for those areas?

```{r}
harris_point_sub <- scsr_substrate |> 
  filter(shortname == "Harris Point") 

tm_shape(harris_point_sub) +
  tm_polygons()
```

```{r}
# This is what the Harris Point MPA is supposed to look like...
harris_point_mpa <- mpas |> 
  filter(shortname == "Harris Point")

tm_shape(harris_point_mpa) +
  tm_polygons()
```

Wow that is jacked up...gotta troubleshoot

Let me see if I can map all of the substrate data for the Channel Islands:

Coordinates found here: https://sanctuaries.noaa.gov/library/coord_cinms.html

```{r}
# Define the bounding box for the channel islands ... use SOUTH_SUB to avoid the invalid polygons
channel_islands_bbox <- st_as_sfc(st_bbox(c(
  xmin = -120.642080, # Westernmost longitude
  ymin = 33.362410,   # Southernmost latitude
  xmax = -118.907120, # Easternmost longitude
  ymax = 34.207070    # Northernmost latitude
), crs = 4326)) # CRS 4326 corresponds to WGS84

# Visualize the bounding box (optional)
plot(channel_islands_bbox, col = "goldenrod")
```

